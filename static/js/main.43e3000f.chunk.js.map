{"version":3,"sources":["images/josh.jpg","images/josh2.jpg","images/josh3.JPG","serviceWorker.js","components/Header.js","components/Navigation.js","components/AboutMe.js","components/Project.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Header","className","src","josh","React","Component","Navigation","href","AboutMe","Project","josh3","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,kC,kBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,6MCYvBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,gDCESC,G,6KAbP,OAEI,yBAAKC,UAAU,UACX,yBAAKC,IAAKC,IAAMF,UAAU,iBAC1B,yBAAKA,UAAU,iBACX,2CACA,yD,GARCG,IAAMC,YCaZC,G,6KAbP,OACI,yBAAKL,UAAU,iBACX,wBAAIA,UAAU,oBACV,uBAAGM,KAAK,KAAR,YACA,uBAAGA,KAAK,aAAR,YACA,uBAAGA,KAAK,eAAR,cACA,uBAAGA,KAAK,WAAR,gB,GARKH,IAAMC,Y,gBCoBhBG,G,6KAjBP,OACI,yBAAKP,UAAU,mBACX,yBAAKA,UAAU,iBACX,wBAAIA,UAAU,cAAd,OACA,uBAAGA,UAAU,qBAAb,kWAOJ,yBAAKA,UAAU,cAAcC,IAAKC,W,GAb5BC,IAAMC,Y,gBCwCbI,G,6KArCP,OACI,yBAAKR,UAAU,qBACX,yBAAKA,UAAU,WACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,gBAAd,gBACA,wBAAIA,UAAU,gBAAd,kBACA,uBAAGA,UAAU,uBAAb,yDAC0D,6BAD1D,oCAEqC,6BAFrC,qCAGsC,6BAHtC,0CAI2C,6BAJ3C,yDAK0D,6BAL1D,wDAMyD,+BAG7D,yBAAKA,UAAU,gBAAgBC,IAAKC,OAExC,yBAAKF,UAAU,WACX,yBAAKA,UAAU,gBAAgBC,IAAKQ,MACpC,yBAAKT,UAAU,mBACX,wBAAIA,UAAU,gBAAd,gBACA,wBAAIA,UAAU,gBAAd,kBACA,uBAAGA,UAAU,uBAAb,yDAC0D,6BAD1D,oCAEqC,6BAFrC,qCAGsC,6BAHtC,0CAI2C,6BAJ3C,yDAK0D,6BAL1D,wDAMyD,qC,GA9B3DG,IAAMC,YCI5BM,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,OAEJC,SAASC,eAAe,SLmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.43e3000f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/josh.063e725d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/josh2.b174588e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/josh3.39d87c5c.JPG\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\r\nimport React from 'react';\r\nimport josh from \"../images/josh2.jpg\";\r\nimport \"../css/Header.css\";\r\n\r\nclass Header extends React.Component {\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"header\">\r\n                <img src={josh} className=\"header-image\" />\r\n                <div className=\"header-middle\">\r\n                    <h1>JOSHUA KOCH</h1>\r\n                    <h2>MECHANICAL ENGINEER</h2>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport \"../css/Navigation.css\";\r\n\r\nclass Navigation extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"nav-container\">\r\n                <ul className=\"nav-container-ul\">\r\n                    <a href=\"/\">About Me</a>\r\n                    <a href=\"/Projects\">Projects</a>\r\n                    <a href=\"/Experience\">Experience</a>\r\n                    <a href=\"/Photos\">Photos</a>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport josh from '../images/josh.jpg';\r\nimport \"../css/AboutMe.css\";\r\n\r\nclass AboutMe extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"about-container\">\r\n                <div className=\"about-content\">\r\n                    <h1 className=\"about-name\">Hey</h1>\r\n                    <p className=\"about-description\">\r\n                        My name is Josh Koch and I am a recent grad from Penn State University. Prior to obtaining my\r\n                        bachelor's degree in mechanical engineering, I had the opportunity to intern as a a Design\r\n                        Technician and a Manufacturing Engineer. Throughout these experiences and my college career,\r\n                        I gained unique and valuable skills that I use and build upon each day.\r\n                    </p>\r\n                </div>\r\n                <img className=\"about-image\" src={josh}/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AboutMe;","import React from 'react';\r\nimport josh from \"../images/josh.jpg\";\r\nimport josh3 from \"../images/josh3.JPG\";\r\nimport \"../css/Project.css\";\r\n\r\nclass Project extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"project-container\">\r\n                <div className=\"project\">\r\n                    <div className=\"project-content\">\r\n                        <h1 className=\"project-name\">Project Name</h1>\r\n                        <h2 className=\"project-date\">April 29, 2020</h2>\r\n                        <p className=\"project-description\">\r\n                            Purpose of the project: Why did you start the project.<br/>\r\n                            Objective: What you accomplished.<br/>\r\n                            Approach: How you accomplished it.<br/>\r\n                            Project duration: How long it took you.<br/>\r\n                            Your role: How you contributed to the team or project.<br/>\r\n                            Final product overview: Pictures, videos, links, etc.<br/>\r\n                        </p>\r\n                    </div>\r\n                    <img className=\"project-image\" src={josh}/>\r\n                </div>\r\n                <div className=\"project\">\r\n                    <img className=\"project-image\" src={josh3}/>\r\n                    <div className=\"project-content\">\r\n                        <h1 className=\"project-name\">Project Name</h1>\r\n                        <h2 className=\"project-date\">April 29, 2020</h2>\r\n                        <p className=\"project-description\">\r\n                            Purpose of the project: Why did you start the project.<br/>\r\n                            Objective: What you accomplished.<br/>\r\n                            Approach: How you accomplished it.<br/>\r\n                            Project duration: How long it took you.<br/>\r\n                            Your role: How you contributed to the team or project.<br/>\r\n                            Final product overview: Pictures, videos, links, etc.<br/>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Project;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Header from './components/Header';\nimport Navigation from \"./components/Navigation\";\nimport AboutMe from \"./components/AboutMe\";\nimport Project from \"./components/Project\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Navigation />\n        <Header />\n        <AboutMe />\n        <Project />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}